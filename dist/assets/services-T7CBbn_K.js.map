{"version":3,"file":"services-T7CBbn_K.js","sources":["../../src/data/pages/services.ts","../../src/stores/services.ts"],"sourcesContent":["import { Service } from '../../pages/services/types'\nimport api from '../../services/api'\n\nexport type Pagination = {\n  page: number\n  perPage: number\n  total: number\n}\n\nexport type Sorting = {\n  sortBy: keyof Service | undefined\n  sortingOrder: 'asc' | 'desc' | null\n}\n\nexport type Filters = {\n  search: string\n}\n\nexport const getServices = async (filters: Partial<Filters & Pagination & Sorting>) => {\n  const { search } = filters\n  let filteredServices: Service[] = await api.request(api.allServices())\n\n  if (search) {\n    filteredServices = filteredServices.filter(\n      (service) =>\n        service.name.toLowerCase().includes(search.toLowerCase()) ||\n        service.description.toLowerCase().includes(search.toLowerCase())\n    )\n  }\n\n  const { page = 1, perPage = 10 } = filters || {}\n  return {\n    data: filteredServices,\n    pagination: {\n      page,\n      perPage,\n      total: filteredServices.length,\n    },\n  }\n}\n\nexport const addService = async (service: Service) => {\n\n  const result = await api.request(api.allServices(), { method: 'POST', body: JSON.stringify(service) })\n\n  if (!result.error) {\n    return result\n  }\n\n  throw new Error(result.error)\n}\n\nexport const updateService = async (service: Service) => {\n  const headers = new Headers()\n  headers.append('Content-Type', 'application/json')\n\n  const result = await api.request(api.service(service.id), { method: 'PUT', body: JSON.stringify(service) })\n\n  if (!result.error) {\n    return result\n  }\n\n  throw new Error(result.error)\n}\n\nexport const removeService = async (service: Service) => {\n  return fetch(api.service(service.id), { method: 'DELETE' })\n}\n","import { defineStore } from 'pinia'\nimport {\n  addService,\n  type Filters,\n  getServices,\n  Pagination,\n  removeService,\n  Sorting,\n  updateService,\n} from '../data/pages/services'\nimport { Service } from '../pages/services/types'\n\nexport const useServiceStore = defineStore('services', {\n  state: () => {\n    return {\n      items: [] as Service[],\n      pagination: { page: 1, perPage: 10, total: 0 },\n    }\n  },\n\n  actions: {\n    async getAll(options: { pagination?: Pagination; sorting?: Sorting; filters?: Partial<Filters> }) {\n      const { data, pagination } = await getServices({\n        ...options.filters,\n        ...options.sorting,\n        ...options.pagination,\n      })\n      this.items = data\n      this.pagination = pagination\n    },\n\n    async add(service: Service) {\n      const [newService] = await addService(service)\n      this.items.unshift(newService)\n      return newService\n    },\n\n    async update(service: Service) {\n      const updatedService = await updateService(service)\n      const index = this.items.findIndex(({ id }) => id === service.id)\n      this.items.splice(index, 1, updatedService)\n      return updatedService\n    },\n\n    async remove(service: Service) {\n      const isRemoved = await removeService(service)\n\n      if (isRemoved) {\n        const index = this.items.findIndex(({ id }) => id === service.id)\n        this.items.splice(index, 1)\n      }\n    },\n  },\n})\n"],"names":["getServices","filters","search","filteredServices","api","service","page","perPage","addService","result","updateService","removeService","useServiceStore","defineStore","options","data","pagination","newService","updatedService","index","id"],"mappings":"+CAkBa,MAAAA,EAAc,MAAOC,GAAqD,CAC/E,KAAA,CAAE,OAAAC,CAAW,EAAAD,EACnB,IAAIE,EAA8B,MAAMC,EAAI,QAAQA,EAAI,aAAa,EAEjEF,IACFC,EAAmBA,EAAiB,OACjCE,GACCA,EAAQ,KAAK,YAAY,EAAE,SAASH,EAAO,YAAa,CAAA,GACxDG,EAAQ,YAAY,YAAA,EAAc,SAASH,EAAO,aAAa,CAAA,GAIrE,KAAM,CAAE,KAAAI,EAAO,EAAG,QAAAC,EAAU,EAAG,EAAIN,GAAW,GACvC,MAAA,CACL,KAAME,EACN,WAAY,CACV,KAAAG,EACA,QAAAC,EACA,MAAOJ,EAAiB,MAC1B,CAAA,CAEJ,EAEaK,EAAa,MAAOH,GAAqB,CAEpD,MAAMI,EAAS,MAAML,EAAI,QAAQA,EAAI,YAAY,EAAG,CAAE,OAAQ,OAAQ,KAAM,KAAK,UAAUC,CAAO,CAAG,CAAA,EAEjG,GAAA,CAACI,EAAO,MACH,OAAAA,EAGH,MAAA,IAAI,MAAMA,EAAO,KAAK,CAC9B,EAEaC,EAAgB,MAAOL,GAAqB,CACvC,IAAI,UACZ,OAAO,eAAgB,kBAAkB,EAEjD,MAAMI,EAAS,MAAML,EAAI,QAAQA,EAAI,QAAQC,EAAQ,EAAE,EAAG,CAAE,OAAQ,MAAO,KAAM,KAAK,UAAUA,CAAO,EAAG,EAEtG,GAAA,CAACI,EAAO,MACH,OAAAA,EAGH,MAAA,IAAI,MAAMA,EAAO,KAAK,CAC9B,EAEaE,EAAgB,MAAON,GAC3B,MAAMD,EAAI,QAAQC,EAAQ,EAAE,EAAG,CAAE,OAAQ,QAAA,CAAU,ECtD/CO,EAAkBC,EAAY,WAAY,CACrD,MAAO,KACE,CACL,MAAO,CAAC,EACR,WAAY,CAAE,KAAM,EAAG,QAAS,GAAI,MAAO,CAAE,CAAA,GAIjD,QAAS,CACP,MAAM,OAAOC,EAAqF,CAChG,KAAM,CAAE,KAAAC,EAAM,WAAAC,CAAW,EAAI,MAAMhB,EAAY,CAC7C,GAAGc,EAAQ,QACX,GAAGA,EAAQ,QACX,GAAGA,EAAQ,UAAA,CACZ,EACD,KAAK,MAAQC,EACb,KAAK,WAAaC,CACpB,EAEA,MAAM,IAAIX,EAAkB,CAC1B,KAAM,CAACY,CAAU,EAAI,MAAMT,EAAWH,CAAO,EACxC,YAAA,MAAM,QAAQY,CAAU,EACtBA,CACT,EAEA,MAAM,OAAOZ,EAAkB,CACvB,MAAAa,EAAiB,MAAMR,EAAcL,CAAO,EAC5Cc,EAAQ,KAAK,MAAM,UAAU,CAAC,CAAE,GAAAC,CAAG,IAAMA,IAAOf,EAAQ,EAAE,EAChE,YAAK,MAAM,OAAOc,EAAO,EAAGD,CAAc,EACnCA,CACT,EAEA,MAAM,OAAOb,EAAkB,CAG7B,GAFkB,MAAMM,EAAcN,CAAO,EAE9B,CACP,MAAAc,EAAQ,KAAK,MAAM,UAAU,CAAC,CAAE,GAAAC,CAAG,IAAMA,IAAOf,EAAQ,EAAE,EAC3D,KAAA,MAAM,OAAOc,EAAO,CAAC,CAC5B,CACF,CACF,CACF,CAAC"}