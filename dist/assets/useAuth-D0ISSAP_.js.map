{"version":3,"file":"useAuth-D0ISSAP_.js","sources":["../../src/pages/auth/composables/useAuth.ts"],"sourcesContent":["import { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useAuthStore } from '../../../stores/auth' // Adjust to your actual auth store path\nimport { Client, NewClient, UserRole } from '../../users/types'\n\nexport const useAuth = () => {\n  const isLoading = ref(false)\n  const error = ref<unknown | null>(null)\n  const router = useRouter()\n  const authStore = useAuthStore()\n\n  const login = async (email: string, password: string) => {\n    isLoading.value = true\n    error.value = null\n    try {\n      await authStore.login({ email, password })\n    } catch (err) {\n      error.value = err\n    } finally {\n      isLoading.value = false\n    }\n  }\n\n  const signup = async (email: string, password: string) => {\n    isLoading.value = true\n    error.value = null\n    try {\n      await authStore.signup({ email, password })\n    } catch (err) {\n      error.value = err\n    } finally {\n      isLoading.value = false\n    }\n  }\n  const addClient = async (formData: NewClient) => {\n    isLoading.value = true\n    error.value = null\n    try {\n      await authStore.addClient(formData)\n    } catch (err) {\n      error.value = err\n    } finally {\n      isLoading.value = false\n    }\n  }\n\n  const logout = async () => {\n    isLoading.value = true\n    try {\n      await authStore.logout()\n    } catch (err) {\n      error.value = err\n    } finally {\n      isLoading.value = false\n    }\n  }\n\n  const fetchCurrentUser = async () => {\n    isLoading.value = true\n    try {\n      await authStore.fetchCurrentUser()\n    } catch (err) {\n      error.value = err\n    } finally {\n      isLoading.value = false\n    }\n  }\n\n  return {\n    isLoading,\n    error,\n    login,\n    signup,\n    addClient,\n    logout,\n    fetchCurrentUser,\n    currentUser: authStore.currentUser,\n    isAuthenticated: authStore.isAuthenticated,\n  }\n}\n"],"names":["useAuth","isLoading","ref","error","useRouter","authStore","useAuthStore","email","password","err","formData"],"mappings":"sDAKO,MAAMA,EAAU,IAAM,CACrB,MAAAC,EAAYC,EAAI,EAAK,EACrBC,EAAQD,EAAoB,IAAI,EACvBE,EAAU,EACzB,MAAMC,EAAYC,IA2DX,MAAA,CACL,UAAAL,EACA,MAAAE,EACA,MA5DY,MAAOI,EAAeC,IAAqB,CACvDP,EAAU,MAAQ,GAClBE,EAAM,MAAQ,KACV,GAAA,CACF,MAAME,EAAU,MAAM,CAAE,MAAAE,EAAO,SAAAC,CAAU,CAAA,QAClCC,EAAK,CACZN,EAAM,MAAQM,CAAA,QACd,CACAR,EAAU,MAAQ,EACpB,CAAA,EAoDA,OAjDa,MAAOM,EAAeC,IAAqB,CACxDP,EAAU,MAAQ,GAClBE,EAAM,MAAQ,KACV,GAAA,CACF,MAAME,EAAU,OAAO,CAAE,MAAAE,EAAO,SAAAC,CAAU,CAAA,QACnCC,EAAK,CACZN,EAAM,MAAQM,CAAA,QACd,CACAR,EAAU,MAAQ,EACpB,CAAA,EAyCA,UAvCgB,MAAOS,GAAwB,CAC/CT,EAAU,MAAQ,GAClBE,EAAM,MAAQ,KACV,GAAA,CACI,MAAAE,EAAU,UAAUK,CAAQ,QAC3BD,EAAK,CACZN,EAAM,MAAQM,CAAA,QACd,CACAR,EAAU,MAAQ,EACpB,CAAA,EA+BA,OA5Ba,SAAY,CACzBA,EAAU,MAAQ,GACd,GAAA,CACF,MAAMI,EAAU,eACTI,EAAK,CACZN,EAAM,MAAQM,CAAA,QACd,CACAR,EAAU,MAAQ,EACpB,CAAA,EAqBA,iBAlBuB,SAAY,CACnCA,EAAU,MAAQ,GACd,GAAA,CACF,MAAMI,EAAU,yBACTI,EAAK,CACZN,EAAM,MAAQM,CAAA,QACd,CACAR,EAAU,MAAQ,EACpB,CAAA,EAWA,YAAaI,EAAU,YACvB,gBAAiBA,EAAU,eAAA,CAE/B"}