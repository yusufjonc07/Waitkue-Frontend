{"version":3,"file":"QueuesPage-UpDBiayU.js","sources":["../../src/pages/queues/QueuesPage.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref, watchEffect } from 'vue'\nimport QueuesTable from './widgets/QueuesTable.vue'\nimport { Queue } from './types'\nimport { useQueues } from './composables/useQueues'\nimport { useModal, useToast } from 'vuestic-ui'\nimport EditQueueForm from './widgets/EditQueueForm.vue'\n\nconst doShowEditQueueModal = ref(false)\n\nconst { queues, isLoading, filters, sorting, pagination, error, ...queuesApi } = useQueues({ lazy: false })\n\nconst queueToEdit = ref<Queue | null>(null)\n\nconst showEditQueueModal = (queue: Queue) => {\n  queueToEdit.value = queue\n  doShowEditQueueModal.value = true\n}\n\nconst showAddQueueModal = () => {\n  queueToEdit.value = null\n  doShowEditQueueModal.value = true\n}\n\nconst onQueueSaved = async (queue: Queue) => {\n\n  if (queueToEdit.value) {\n    await queuesApi.update(queue)\n    if (!error.value) {\n      notify({\n        message: `${queue.fullname} has been updated`,\n        color: 'success',\n      })\n    }\n  } else {\n    await queuesApi.add(queue)\n\n    if (!error.value) {\n      notify({\n        message: `Ticket ${queue.number} has been created`,\n        color: 'success',\n      })\n    }\n  }\n}\n\n\nconst { init: notify } = useToast()\n\nwatchEffect(() => {\n  if (error.value) {\n    notify({\n      message: error.value.message,\n      color: 'danger',\n    })\n  }\n})\n\nconst onQueueDelete = async (queue: Queue) => {\n  await queuesApi.remove(queue)\n  notify({\n    message: `Ticket ${queue.number} for ${queue.service.name} has been deleted`,\n    color: 'success',\n  })\n}\n\nconst editFormRef = ref()\n\nconst { confirm } = useModal()\n\nconst beforeEditFormModalClose = async (hide: () => unknown) => {\n  if (editFormRef.value.isFormHasUnsavedChanges) {\n    const agreed = await confirm({\n      maxWidth: '380px',\n      message: 'Form has unsaved changes. Are you sure you want to close it?',\n      size: 'small',\n    })\n    if (agreed) {\n      hide()\n    }\n  } else {\n    hide()\n  }\n}\n</script>\n\n<template>\n  <h1 class=\"page-title\">Queues</h1>\n\n  <VaCard>\n    <VaCardContent>\n      <div class=\"flex flex-col md:flex-row gap-2 mb-2 justify-between\">\n        <div class=\"flex flex-col md:flex-row gap-2 justify-start\">\n          <VaButtonToggle\n            v-model=\"filters.isActive\"\n            color=\"background-element\"\n            border-color=\"background-element\"\n            :options=\"[\n              { label: 'Open', value: true },\n              { label: 'Finished', value: false },\n            ]\"\n          />\n          <VaInput v-model=\"filters.search\" placeholder=\"Search\">\n            <template #prependInner>\n              <VaIcon name=\"search\" color=\"secondary\" size=\"small\" />\n            </template>\n          </VaInput>\n        </div>\n        <VaButton @click=\"showAddQueueModal\">Add Queue</VaButton>\n      </div>\n\n      <QueuesTable\n        v-model:sort-by=\"sorting.sortBy\"\n        v-model:sorting-order=\"sorting.sortingOrder\"\n        :queues=\"queues\"\n        :loading=\"isLoading\"\n        :pagination=\"pagination\"\n        @editQueue=\"showEditQueueModal\"\n        @deleteQueue=\"onQueueDelete\"\n      />\n    </VaCardContent>\n  </VaCard>\n\n  <VaModal\n    v-slot=\"{ cancel, ok }\"\n    v-model=\"doShowEditQueueModal\"\n    size=\"small\"\n    mobile-fullscreen\n    close-button\n    hide-default-actions\n    :before-cancel=\"beforeEditFormModalClose\"\n  >\n    <h1 class=\"va-h5\">{{ queueToEdit ? 'Edit queue' : 'Add queue' }}</h1>\n    <EditQueueForm\n      ref=\"editFormRef\"\n      :queue=\"queueToEdit\"\n      :save-button-label=\"queueToEdit ? 'Save' : 'Add'\"\n      @close=\"cancel\"\n      @save=\"\n        (queue: any) => {\n          onQueueSaved(queue)\n          ok()\n        }\n      \"\n    />\n  </VaModal>\n</template>\n"],"names":["doShowEditQueueModal","ref","queues","isLoading","filters","sorting","pagination","error","queuesApi","useQueues","queueToEdit","showEditQueueModal","queue","showAddQueueModal","onQueueSaved","notify","useToast","watchEffect","onQueueDelete","editFormRef","confirm","useModal","beforeEditFormModalClose","hide"],"mappings":"qlBAQM,MAAAA,EAAuBC,EAAI,EAAK,EAEhC,CAAE,OAAAC,EAAQ,UAAAC,EAAW,QAAAC,EAAS,QAAAC,EAAS,WAAAC,EAAY,MAAAC,EAAO,GAAGC,CAAc,EAAAC,EAAU,CAAE,KAAM,EAAO,CAAA,EAEpGC,EAAcT,EAAkB,IAAI,EAEpCU,EAAsBC,GAAiB,CAC3CF,EAAY,MAAQE,EACpBZ,EAAqB,MAAQ,EAAA,EAGzBa,EAAoB,IAAM,CAC9BH,EAAY,MAAQ,KACpBV,EAAqB,MAAQ,EAAA,EAGzBc,EAAe,MAAOF,GAAiB,CAEvCF,EAAY,OACR,MAAAF,EAAU,OAAOI,CAAK,EACvBL,EAAM,OACFQ,EAAA,CACL,QAAS,GAAGH,EAAM,QAAQ,oBAC1B,MAAO,SAAA,CACR,IAGG,MAAAJ,EAAU,IAAII,CAAK,EAEpBL,EAAM,OACFQ,EAAA,CACL,QAAS,UAAUH,EAAM,MAAM,oBAC/B,MAAO,SAAA,CACR,EAEL,EAII,CAAE,KAAMG,CAAO,EAAIC,EAAS,EAElCC,EAAY,IAAM,CACZV,EAAM,OACDQ,EAAA,CACL,QAASR,EAAM,MAAM,QACrB,MAAO,QAAA,CACR,CACH,CACD,EAEK,MAAAW,EAAgB,MAAON,GAAiB,CACtC,MAAAJ,EAAU,OAAOI,CAAK,EACrBG,EAAA,CACL,QAAS,UAAUH,EAAM,MAAM,QAAQA,EAAM,QAAQ,IAAI,oBACzD,MAAO,SAAA,CACR,CAAA,EAGGO,EAAclB,IAEd,CAAE,QAAAmB,GAAYC,IAEdC,EAA2B,MAAOC,GAAwB,CAC1DJ,EAAY,MAAM,wBACL,MAAMC,EAAQ,CAC3B,SAAU,QACV,QAAS,+DACT,KAAM,OAAA,CACP,GAEMG,IAGFA,GACP"}