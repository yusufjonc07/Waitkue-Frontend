import{a as i,y as u}from"./index-Bcr3mXlA.js";const l=async t=>{const{isActive:e,search:s}=t;let a=await i.request(i.allQueues());e?a=a.filter(n=>n.step!==3):a=a.filter(n=>n.step==3),s&&(a=a.filter(n=>{let r;return((r=n.profile)==null?void 0:r.fullname.toLowerCase().includes(s.toLowerCase()))||n.queuename.toLowerCase().includes(s.toLowerCase())||n.email.toLowerCase().includes(s.toLowerCase())}));const{page:o=1,perPage:c=10}=t||{};return{data:a,pagination:{page:o,perPage:c,total:a.length}}},d=async(t,e)=>await i.request(i.numbers({date:t,service_id:e})),w=async t=>await i.request(i.call(t)),m=async()=>await i.request(i.waitlist()),f=async t=>{const e=await i.request(i.allQueues(),{method:"POST",body:JSON.stringify(t)});if(!e.error)return e;throw new Error(e.error)},y=async t=>{const e={...t};typeof e.client=="object"&&e.client!==null&&(e.client_id=e.client.id,delete e.client),typeof e.service=="object"&&e.service!==null&&(e.service_id=e.service.id,delete e.service);const s=await i.request(i.queue(t.id),{method:"PUT",body:JSON.stringify(e)});if(!s.error)return s;throw new Error(s.error)},p=async t=>i.request(i.queue(t.id),{method:"DELETE"}),h=u("queues",{state:()=>({items:[],waitlist:{},numbers:[],pagination:{page:1,perPage:10,total:0}}),actions:{async getAll(t){const{data:e,pagination:s}=await l({...t.filters,...t.sorting,...t.pagination});this.items=e,this.pagination=s},async getAvailableNumbers(t,e){this.numbers=await d(t,e)},async getWaitlistData(){this.waitlist=await m()},async callTicket(t){await w(t)},async add(t){const e=await f(t);return this.items.unshift(e),e},async update(t){const e=await y(t),s=this.items.findIndex(({id:a})=>a===t.id);return this.items.splice(s,1,e),e},async remove(t){if(await p(t)){const s=this.items.findIndex(({id:a})=>a===t.id);this.items.splice(s,1)}}}});export{h as u};
//# sourceMappingURL=queues-ahqpviki.js.map
