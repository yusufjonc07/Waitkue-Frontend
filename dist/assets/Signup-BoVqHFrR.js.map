{"version":3,"file":"Signup-BoVqHFrR.js","sources":["../../src/pages/auth/Signup.vue"],"sourcesContent":["<template>\n  <div class=\"flex-column\">\n    <h1 class=\"font-semibold text-3xl mb-4\">Sign up</h1>\n    <p class=\"text-base mb-4 leading-5\">\n      Have an account?\n      <RouterLink :to=\"{ name: 'login' }\" class=\"font-semibold text-primary\">Login</RouterLink>\n    </p>\n\n    <VaStepper ref=\"actionStepper\" v-model=\"step\" :steps=\"steps\">\n      <!-- Step 1: Account Info -->\n      <template #step-content-0>\n        <VaForm ref=\"form\" @submit.prevent=\"submit1\">\n          <VaInput\n            v-model=\"formData.email\"\n            :rules=\"[\n              (v) => !!v || 'Email is required',\n              (v) => /.+@.+\\..+/.test(v) || 'Invalid email format'\n            ]\"\n            class=\"mb-4\"\n            label=\"Email\"\n            type=\"email\"\n          />\n\n          <VaValue v-slot=\"isPasswordVisible\" :default-value=\"false\">\n            <VaInput\n              v-model=\"formData.password\"\n              :rules=\"passwordRules\"\n              :type=\"isPasswordVisible.value ? 'text' : 'password'\"\n              class=\"mb-4\"\n              label=\"Password\"\n              messages=\"Password should be 8+ characters with letters, numbers, and special characters.\"\n              @clickAppendInner.stop=\"isPasswordVisible.value = !isPasswordVisible.value\"\n            >\n              <template #appendInner>\n                <VaIcon\n                  :name=\"isPasswordVisible.value ? 'mso-visibility_off' : 'mso-visibility'\"\n                  class=\"cursor-pointer\"\n                  color=\"secondary\"\n                />\n              </template>\n            </VaInput>\n\n            <VaInput\n              v-model=\"formData.repeatPassword\"\n              :rules=\"[\n                (v) => !!v || 'Repeat Password is required',\n                (v) => v === formData.password || 'Passwords do not match'\n              ]\"\n              :type=\"isPasswordVisible.value ? 'text' : 'password'\"\n              class=\"mb-4\"\n              label=\"Repeat Password\"\n              @clickAppendInner.stop=\"isPasswordVisible.value = !isPasswordVisible.value\"\n            >\n              <template #appendInner>\n                <VaIcon\n                  :name=\"isPasswordVisible.value ? 'mso-visibility_off' : 'mso-visibility'\"\n                  class=\"cursor-pointer\"\n                  color=\"secondary\"\n                />\n              </template>\n            </VaInput>\n          </VaValue>\n        </VaForm>\n      </template>\n\n      <!-- Step 2: Profile Details -->\n      <template #step-content-1>\n        <VaForm ref=\"form2\" @submit.prevent=\"submit2\">\n          <VaInput\n            v-model=\"formData2.firstname\"\n            label=\"First Name\"\n            class=\"mb-4\"\n            :rules=\"[(v) => !!v || 'First name is required']\"\n          />\n          <VaInput\n            v-model=\"formData2.surename\"\n            label=\"Surname\"\n            class=\"mb-4\"\n            :rules=\"[(v) => !!v || 'Surname is required']\"\n          />\n          <VaInput\n            v-model=\"formData2.middlename\"\n            label=\"Middle Name\"\n            class=\"mb-4\"\n          />\n          <VaSelect\n            v-model=\"formData2.gender\"\n            label=\"Gender\"\n            class=\"mb-4\"\n            :options=\"['Male', 'Female', 'Other']\"\n            :rules=\"[(v) => !!v || 'Gender is required']\"\n          />\n          <VaButton\n            :loading=\"isLoading\"\n            @click=\"submit2\"\n            class=\"mt-2\"\n            color=\"primary\"\n          >\n            Finish\n          </VaButton>\n        </VaForm>\n      </template>\n    </VaStepper>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useForm, useToast, defineVaStepperSteps } from 'vuestic-ui'\nimport { useAuth } from './composables/useAuth'\nimport { useAuthStore } from '../../stores/auth'\nimport { format } from 'path'\n\nconst step = ref(0)\nconst { push } = useRouter()\nconst { init } = useToast()\nconst { login, signup, addClient, isLoading } = useAuth()\n\n// Form validation\nconst { validate } = useForm('form')\nconst { validate: validate2 } = useForm('form2')\n\n// Step 1: Email & Password\nconst formData = reactive({\n  email: '',\n  password: '',\n  repeatPassword: '',\n})\n\n// Step 2: Profile Info\nconst formData2 = reactive({\n  firstname: '',\n  surename: '',\n  middlename: '',\n  user_id: 0,\n  gender: 'male',\n})\n\nconst authStore = useAuthStore()\n\n// Password rules\nconst passwordRules = [\n  (v: string) => !!v || 'Password field is required',\n  (v: string) => v.length >= 8 || 'Password must be at least 8 characters long',\n  (v: string) => /[A-Za-z]/.test(v) || 'Password must contain at least one letter',\n  (v: string) => /\\d/.test(v) || 'Password must contain at least one number',\n  (v: string) => /[!@#$%^&*(),.?\":{}|<>]/.test(v) || 'Password must contain at least one special character',\n]\n\n// Submit step 1\nconst submit1 = async () => {\n  const isValid = await validate()\n  if (isValid) {\n    try {\n      await signup(formData.email, formData.password)\n      await login(formData.email.split(\"@\")[0], formData.password)\n      init({ message: 'Account created successfully!', color: 'success' })\n    } catch (error: any) {\n      init({ message: error.message || 'Sign-up failed. Try again.', color: 'danger' })\n      throw error\n    }\n  } else {\n    throw new Error('Form validation failed.')\n  }\n}\n\n// Submit step 2\nconst submit2 = async () => {\n  const isValid = await validate2()\n  if (isValid) {\n    try {\n      formData2.user_id = authStore.currentUser?.id || 0\n      await addClient(formData2)\n      init({ message: \"You've successfully signed up!\", color: 'success' })\n      push({ name: 'dashboard' })\n    } catch (error: any) {\n      init({ message: error.message || 'Profile creation failed.', color: 'danger' })\n    }\n  }\n}\n\n// Stepper logic\nconst steps = ref(defineVaStepperSteps([\n  {\n    label: 'User Account',\n    beforeLeave: async (fromStep, toStep) => {\n      if (fromStep !== toStep) {\n        try {\n          await submit1()\n          return true\n        } catch {\n          return false\n        }\n      }\n      return true\n    },\n  },\n  {\n    label: 'Profile Details',\n    beforeLeave: async () => {\n      const isValid = await validate2()\n      return isValid\n    },\n  },\n]))\n</script>\n"],"names":["step","ref","push","useRouter","init","useToast","login","signup","addClient","isLoading","useAuth","validate","useForm","validate2","formData","reactive","formData2","authStore","useAuthStore","passwordRules","v","submit1","error","submit2","_a","steps","defineVaStepperSteps","fromStep","toStep"],"mappings":"sUAkHM,MAAAA,EAAOC,EAAI,CAAC,EACZ,CAAE,KAAAC,GAASC,IACX,CAAE,KAAAC,GAASC,IACX,CAAE,MAAAC,EAAO,OAAAC,EAAQ,UAAAC,EAAW,UAAAC,CAAA,EAAcC,IAG1C,CAAE,SAAAC,CAAA,EAAaC,EAAQ,MAAM,EAC7B,CAAE,SAAUC,CAAU,EAAID,EAAQ,OAAO,EAGzCE,EAAWC,EAAS,CACxB,MAAO,GACP,SAAU,GACV,eAAgB,EAAA,CACjB,EAGKC,EAAYD,EAAS,CACzB,UAAW,GACX,SAAU,GACV,WAAY,GACZ,QAAS,EACT,OAAQ,MAAA,CACT,EAEKE,EAAYC,IAGZC,EAAgB,CACnBC,GAAc,CAAC,CAACA,GAAK,6BACrBA,GAAcA,EAAE,QAAU,GAAK,8CAC/BA,GAAc,WAAW,KAAKA,CAAC,GAAK,4CACpCA,GAAc,KAAK,KAAKA,CAAC,GAAK,4CAC9BA,GAAc,yBAAyB,KAAKA,CAAC,GAAK,sDAAA,EAI/CC,EAAU,SAAY,CAE1B,GADgB,MAAMV,IAEhB,GAAA,CACF,MAAMJ,EAAOO,EAAS,MAAOA,EAAS,QAAQ,EACxC,MAAAR,EAAMQ,EAAS,MAAM,MAAM,GAAG,EAAE,CAAC,EAAGA,EAAS,QAAQ,EAC3DV,EAAK,CAAE,QAAS,gCAAiC,MAAO,SAAW,CAAA,QAC5DkB,EAAY,CACnB,MAAAlB,EAAK,CAAE,QAASkB,EAAM,SAAW,6BAA8B,MAAO,SAAU,EAC1EA,CACR,KAEM,OAAA,IAAI,MAAM,yBAAyB,CAC3C,EAIIC,EAAU,SAAY,OAE1B,GADgB,MAAMV,IAEhB,GAAA,CACQG,EAAA,UAAUQ,EAAAP,EAAU,cAAV,YAAAO,EAAuB,KAAM,EACjD,MAAMhB,EAAUQ,CAAS,EACzBZ,EAAK,CAAE,QAAS,iCAAkC,MAAO,SAAW,CAAA,EAC/DF,EAAA,CAAE,KAAM,WAAA,CAAa,QACnBoB,EAAY,CACnBlB,EAAK,CAAE,QAASkB,EAAM,SAAW,2BAA4B,MAAO,SAAU,CAChF,CACF,EAIIG,EAAQxB,EAAIyB,EAAqB,CACrC,CACE,MAAO,eACP,YAAa,MAAOC,EAAUC,IAAW,CACvC,GAAID,IAAaC,EACX,GAAA,CACF,aAAMP,EAAQ,EACP,EAAA,MACD,CACC,MAAA,EACT,CAEK,MAAA,EACT,CACF,EACA,CACE,MAAO,kBACP,YAAa,SACK,MAAMR,GAG1B,CACD,CAAA,CAAC"}