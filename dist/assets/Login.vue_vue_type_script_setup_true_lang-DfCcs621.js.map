{"version":3,"file":"Login.vue_vue_type_script_setup_true_lang-DfCcs621.js","sources":["../../src/pages/auth/Login.vue"],"sourcesContent":["<template>\n  <VaForm ref=\"form\" @submit.prevent=\"submit\">\n    <h1 class=\"font-semibold text-4xl mb-4\">Log in</h1>\n    <p class=\"text-base mb-4 leading-5\">\n      New to Vuestic?\n      <RouterLink :to=\"{ name: 'signup' }\" class=\"font-semibold text-primary\">Sign up</RouterLink>\n    </p>\n    <VaInput v-model=\"formData.email\" :rules=\"[validators.required]\" class=\"mb-4\" label=\"Username or Email\"\n      type=\"text\" />\n    <VaValue v-slot=\"isPasswordVisible\" :default-value=\"false\">\n      <VaInput v-model=\"formData.password\" :rules=\"[validators.required]\"\n        :type=\"isPasswordVisible.value ? 'text' : 'password'\" class=\"mb-4\" label=\"Password\"\n        @clickAppendInner.stop=\"isPasswordVisible.value = !isPasswordVisible.value\">\n        <template #appendInner>\n          <VaIcon :name=\"isPasswordVisible.value ? 'mso-visibility_off' : 'mso-visibility'\" class=\"cursor-pointer\"\n            color=\"secondary\" />\n        </template>\n      </VaInput>\n    </VaValue>\n\n    <div class=\"auth-layout__options flex flex-col sm:flex-row items-start sm:items-center justify-between\">\n      <VaCheckbox v-model=\"formData.keepLoggedIn\" class=\"mb-2 sm:mb-0\" label=\"Keep me signed in on this device\" />\n      <RouterLink :to=\"{ name: 'recover-password' }\" class=\"mt-2 sm:mt-0 sm:ml-1 font-semibold text-primary\">\n        Forgot password?\n      </RouterLink>\n    </div>\n\n    <div class=\"flex justify-center mt-4\">\n      <VaButton class=\"w-full\" :loading=\"isLoading\" type=\"submit\"> Login</VaButton>\n    </div>\n  </VaForm>\n</template>\n\n<script lang=\"ts\" setup>\nimport { reactive } from 'vue'\nimport { useForm } from 'vuestic-ui'\nimport { validators } from '../../services/utils'\nimport { useAuth } from './composables/useAuth'\nimport { useAuthStore } from '../../stores/auth'\nconst { validate } = useForm('form')\n\nconst formData = reactive({\n  email: '',\n  password: '',\n  keepLoggedIn: false,\n})\n\nconst { login, isLoading } = useAuth()\nasync function submit() {\n  if (!validate()) return\n\n  try {\n    await login(formData.email, formData.password)\n    const auth = useAuthStore()\n    if (auth.isAuthenticated) {\n      window.location.reload()\n    }\n  } catch (error) {\n    console.error('Login failed:', error)\n  }\n}\n</script>\n"],"names":["validate","useForm","formData","reactive","login","isLoading","useAuth","submit","useAuthStore","error"],"mappings":"qcAuCA,KAAM,CAAE,SAAAA,CAAA,EAAaC,EAAQ,MAAM,EAE7BC,EAAWC,EAAS,CACxB,MAAO,GACP,SAAU,GACV,aAAc,EAAA,CACf,EAEK,CAAE,MAAAC,EAAO,UAAAC,CAAU,EAAIC,EAAQ,EACrC,eAAeC,GAAS,CAClB,GAACP,IAED,GAAA,CACF,MAAMI,EAAMF,EAAS,MAAOA,EAAS,QAAQ,EAChCM,IACJ,iBACP,OAAO,SAAS,eAEXC,EAAO,CACN,QAAA,MAAM,gBAAiBA,CAAK,CACtC,CACF"}