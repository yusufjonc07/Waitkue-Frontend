{"version":3,"file":"useServices-G1S5lhun.js","sources":["../../src/pages/services/composables/useServices.ts"],"sourcesContent":["import { Ref, ref, unref, watch, computed } from 'vue'\nimport { v4 as uuid } from 'uuid'\nimport type { Filters, Pagination, Sorting } from '../../../data/pages/services'\nimport { Service } from '../types'\nimport { useServiceStore } from '../../../stores/services'\n\nconst makePaginationRef = () => ref<Pagination>({ page: 1, perPage: 10, total: 0 })\nconst makeSortingRef = () => ref<Sorting>({ sortBy: 'fullname', sortingOrder: null })\nconst makeFiltersRef = () => ref<Partial<Filters>>({ isActive: true, search: '' })\n\nexport const useServices = (options?: {\n  pagination?: Ref<Pagination>\n  sorting?: Ref<Sorting>\n  filters?: Ref<Partial<Filters>>\n}) => {\n  const isLoading = ref(false)\n  const error = ref()\n  const servicesStore = useServiceStore()\n\n  const { filters = makeFiltersRef(), sorting = makeSortingRef(), pagination = makePaginationRef() } = options || {}\n\n  const fetch = async () => {\n    isLoading.value = true\n    try {\n      await servicesStore.getAll({\n        filters: unref(filters),\n        sorting: unref(sorting),\n        pagination: unref(pagination),\n      })\n      pagination.value = servicesStore.pagination\n    } finally {\n      isLoading.value = false\n    }\n  }\n\n  watch(\n    filters,\n    () => {\n      // Reset pagination to first page when filters changed\n      pagination.value.page = 1\n      fetch()\n    },\n    { deep: true },\n  )\n\n  fetch()\n\n  const services = computed(() => {\n    const getSortItem = (obj: any, sortBy: string) => {\n      return obj[sortBy]\n    }\n\n    const paginated = servicesStore.items.slice(\n      (pagination.value.page - 1) * pagination.value.perPage,\n      pagination.value.page * pagination.value.perPage,\n    )\n\n    if (sorting.value.sortBy && sorting.value.sortingOrder) {\n      paginated.sort((a, b) => {\n        const first = getSortItem(a, sorting.value.sortBy!)\n        const second = getSortItem(b, sorting.value.sortBy!)\n        if (first > second) {\n          return sorting.value.sortingOrder === 'asc' ? 1 : -1\n        }\n        if (first < second) {\n          return sorting.value.sortingOrder === 'asc' ? -1 : 1\n        }\n        return 0\n      })\n    }\n    return paginated\n  })\n\n  return {\n    error,\n    isLoading,\n    filters,\n    sorting,\n    pagination,\n\n    services,\n\n    fetch,\n\n    async add(service: Service) {\n      isLoading.value = true\n      try {\n        return await servicesStore.add(service)\n      } catch (e) {\n        error.value = e\n      } finally {\n        isLoading.value = false\n      }\n    },\n\n    async update(service: Service) {\n      isLoading.value = true\n      try {\n        return await servicesStore.update(service)\n      } catch (e) {\n        error.value = e\n      } finally {\n        isLoading.value = false\n      }\n    },\n\n    async remove(service: Service) {\n      isLoading.value = true\n      try {\n        return await servicesStore.remove(service)\n      } catch (e) {\n        error.value = e\n      } finally {\n        isLoading.value = false\n      }\n    },\n\n    async uploadAvatar(avatar: Blob) {\n      const formData = new FormData()\n      formData.append('avatar', avatar)\n      formData.append('id', uuid())\n\n      return servicesStore.uploadAvatar(formData)\n    },\n  }\n}\n"],"names":["makePaginationRef","ref","makeSortingRef","makeFiltersRef","useServices","options","isLoading","error","servicesStore","useServiceStore","filters","sorting","pagination","fetch","unref","watch","services","computed","getSortItem","obj","sortBy","paginated","a","b","first","second","service","avatar","formData","uuid"],"mappings":"6IAMA,MAAMA,EAAoB,IAAMC,EAAgB,CAAE,KAAM,EAAG,QAAS,GAAI,MAAO,CAAA,CAAG,EAC5EC,EAAiB,IAAMD,EAAa,CAAE,OAAQ,WAAY,aAAc,KAAM,EAC9EE,EAAiB,IAAMF,EAAsB,CAAE,SAAU,GAAM,OAAQ,GAAI,EAEpEG,EAAeC,GAItB,CACE,MAAAC,EAAYL,EAAI,EAAK,EACrBM,EAAQN,IACRO,EAAgBC,IAEhB,CAAE,QAAAC,EAAUP,EAAe,EAAG,QAAAQ,EAAUT,EAAkB,EAAA,WAAAU,EAAaZ,GAAwB,EAAW,GAE1Ga,EAAQ,SAAY,CACxBP,EAAU,MAAQ,GACd,GAAA,CACF,MAAME,EAAc,OAAO,CACzB,QAASM,EAAMJ,CAAO,EACtB,QAASI,EAAMH,CAAO,EACtB,WAAYG,EAAMF,CAAU,CAAA,CAC7B,EACDA,EAAW,MAAQJ,EAAc,UAAA,QACjC,CACAF,EAAU,MAAQ,EACpB,CAAA,EAGFS,EACEL,EACA,IAAM,CAEJE,EAAW,MAAM,KAAO,EAClBC,GACR,EACA,CAAE,KAAM,EAAK,CAAA,EAGTA,IAEA,MAAAG,EAAWC,EAAS,IAAM,CACxB,MAAAC,EAAc,CAACC,EAAUC,IACtBD,EAAIC,CAAM,EAGbC,EAAYb,EAAc,MAAM,OACnCI,EAAW,MAAM,KAAO,GAAKA,EAAW,MAAM,QAC/CA,EAAW,MAAM,KAAOA,EAAW,MAAM,OAAA,EAG3C,OAAID,EAAQ,MAAM,QAAUA,EAAQ,MAAM,cAC9BU,EAAA,KAAK,CAACC,EAAGC,IAAM,CACvB,MAAMC,EAAQN,EAAYI,EAAGX,EAAQ,MAAM,MAAO,EAC5Cc,EAASP,EAAYK,EAAGZ,EAAQ,MAAM,MAAO,EACnD,OAAIa,EAAQC,EACHd,EAAQ,MAAM,eAAiB,MAAQ,EAAI,GAEhDa,EAAQC,EACHd,EAAQ,MAAM,eAAiB,MAAQ,GAAK,EAE9C,CAAA,CACR,EAEIU,CAAA,CACR,EAEM,MAAA,CACL,MAAAd,EACA,UAAAD,EACA,QAAAI,EACA,QAAAC,EACA,WAAAC,EAEA,SAAAI,EAEA,MAAAH,EAEA,MAAM,IAAIa,EAAkB,CAC1BpB,EAAU,MAAQ,GACd,GAAA,CACK,OAAA,MAAME,EAAc,IAAIkB,CAAO,QAC/B,EAAG,CACVnB,EAAM,MAAQ,CAAA,QACd,CACAD,EAAU,MAAQ,EACpB,CACF,EAEA,MAAM,OAAOoB,EAAkB,CAC7BpB,EAAU,MAAQ,GACd,GAAA,CACK,OAAA,MAAME,EAAc,OAAOkB,CAAO,QAClC,EAAG,CACVnB,EAAM,MAAQ,CAAA,QACd,CACAD,EAAU,MAAQ,EACpB,CACF,EAEA,MAAM,OAAOoB,EAAkB,CAC7BpB,EAAU,MAAQ,GACd,GAAA,CACK,OAAA,MAAME,EAAc,OAAOkB,CAAO,QAClC,EAAG,CACVnB,EAAM,MAAQ,CAAA,QACd,CACAD,EAAU,MAAQ,EACpB,CACF,EAEA,MAAM,aAAaqB,EAAc,CACzB,MAAAC,EAAW,IAAI,SACZ,OAAAA,EAAA,OAAO,SAAUD,CAAM,EACvBC,EAAA,OAAO,KAAMC,EAAM,CAAA,EAErBrB,EAAc,aAAaoB,CAAQ,CAC5C,CAAA,CAEJ"}